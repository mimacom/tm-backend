#!/usr/bin/env bash

checkmark="\xe2\x98\x91"
cross="\xe2\x98\x92"

startred='\033[0;31m'
endcolor='\033[0m'
startgreen='\033[0;32m'

echob() {
  echo -e "\033[1m$1\033[0m"
}

echoCheck() {
  echo -e "$startgreen $checkmark $1 $endcolor"
}

echoError() {
  echo -e "$startred $cross $1 $endcolor"
}

check() { # checks is a tool is working
  if ! type "$1" > /dev/null 2>&1; then
    echoError "$2"
    exit 1
  else
    echoCheck "$3"
  fi
}

prepare() {
  check "terraform" "Terraform not installed!" "Terraform available"
  TF_WORKSPACE=${1} terraform init
  TF_WORKSPACE=${1} terraform refresh
}

goal_prepare() {
  prepare "$1"
}

goal_dev() {
  exec_goal dev "$@"
}

goal_prod() {
  exec_goal prod "$@"
}

exec_goal() {
  ENV=${1}
  shift
  if [[ ! -f "terraform.tfstate.d/${ENV}/terraform.tfstate" ]]; then
    prepare ${ENV}
  fi
  OUTPUT=`TF_WORKSPACE=${ENV} terraform output`
  NOMAD_SERVER_IP=`printf "${OUTPUT}" | awk '/nomad_server_ip/{printf "%s", $3}'`
  export DB_ADDR=`printf "${OUTPUT}" | awk '/db_addr/{printf "%s", $3}'`
  export DB_PASS=`printf "${OUTPUT}" | awk '/db_pass/{printf "%s", $3}'`
  if [[ -n "$NOMAD_SERVER_IP" ]]; then
    NOMAD_ADDR="http://${NOMAD_SERVER_IP}:4646" nomad "$@"
  fi
}

if type -t "goal_$1" &>/dev/null; then
  goal_$1 ${@:2}
else
  echo "usage: $0 <goal>

goal:
    prepare <env>                 -- make sure everything is set up correctly so this project can actually work
    dev <commands>           -- work on dev
    prod <commands>          -- work on prod
    shuttle <env>
"
  exit 1
fi
